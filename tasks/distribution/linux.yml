---
- name: "Install daemon packages for use {{ ntp_daemon_choice }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_install_package | flatten }}"
  when: ntp_install_package | bool

- name: Remove other daemons packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: absent
  loop: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_remove_package | flatten }}"
  when: ntp_remove_package | bool

- name: Install tzdata packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ ntp_tzdata_package | flatten }}"
  when: ntp_install_tzdata | bool

# - name: set timezone
#   ansible.builtin.copy:
#     dest: "{{ ntp_timezone_file }}"
#     content: "{{ ntp_timezone }}"
#     mode: 0644
#     owner: root
#     group: root

- name: Set timezone
  community.general.timezone:
    name: "{{ ntp_timezone }}"
    # hwclock: UTC

- name: Create chrony confdir
  ansible.builtin.file:
    path: "{{ ntp_chrony_confdir }}"
    state: directory
    mode: "0644"
    owner: root
    group: root
  when: ntp_daemon_choice == "chrony"

- name: Create chrony envfile
  ansible.builtin.copy:
    content: |
      # ansible_managed
      OPTIONS="-F 2 -f {{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_config_file }}"
    dest: "{{ ntp_chrony_envfile }}"
    mode: "0644"
    owner: root
    group: root
  when:
    - ntp_daemon_choice == "chrony"
    - ansible_os_family == "RedHat"

- name: Create chrony envfile
  ansible.builtin.copy:
    content: |
      # ansible_managed
      DAEMON_OPTS="-F 2 -f {{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_config_file }}"
    dest: "{{ ntp_chrony_envfile }}"
    mode: "0644"
    owner: root
    group: root
  when:
    - ntp_daemon_choice == "chrony"
    - ansible_os_family == "Debian"

- name: "Generate daemon configuration file for {{ ntp_daemon_choice }}"
  ansible.builtin.template:
    src: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_config_file | basename }}.j2"
    dest: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_config_file }}"
    mode: "0644"
    owner: root
    group: root
  notify: restart selected daemon
  when: ntp_manage_config | bool

- name: Disable and stop others daemon services
  ansible.builtin.service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_disable_service | flatten }}"
  when: ntp_manage_services | bool
  ignore_errors: true
  # no_log: true
  failed_when: false

# - name: enable and stop {{ ntp_daemon_choice }} daemon service
#   ansible.builtin.service:
#     name: "{{ item }}"
#     state: stopped
#     enabled: true
#   loop: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_enable_service | flatten }}"
#   when: ntp_manage_services | bool

- name: "Systemd daemon-reload"
  ansible.builtin.systemd:
    daemon_reload: true
  when: ansible_service_mgr == "systemd"

- name: "Restart daemon service for {{ ntp_daemon_choice }}"
  ansible.builtin.service:
    name: "{{ item }}"
    state: restarted
    enabled: true
  loop: "{{ ntp_daemon_conf[ntp_daemon_choice].ntp_daemon_enable_service | flatten }}"
  when: ntp_manage_services | bool
